"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct
class pallet_enum_t(object):
    __slots__ = [ "value" ]
    PHANTOM = 0
    UNKNOWN = 1
    BLOCK_FOUR_WAY = 2
    STRINGER_TWO_WAY = 3
    STRINGER_FOUR_WAY = 4
    LOADED_WITH_BOXES = 5
    LOADED_WITH_TIRES = 6
    _packed_fingerprint = struct.pack(">Q", 0x55e7fb0c7b76b3e)

    def __init__ (self, value):
        self.value = value

    def _get_hash_recursive(parents):
        return 0x55e7fb0c7b76b3e
    _get_hash_recursive=staticmethod(_get_hash_recursive)
    def _get_packed_fingerprint():
        return pallet_enum_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

    def encode(self):
        return struct.pack(">Qi", 0x55e7fb0c7b76b3e, self.value)
    def _encode_one(self, buf):
        buf.write (struct.pack(">i", self.value))

    def decode(data):
        if hasattr (data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != pallet_enum_t._packed_fingerprint:
            raise ValueError("Decode error")
        return pallet_enum_t(struct.unpack(">i", buf.read(4))[0])
    decode = staticmethod(decode)
    def _decode_one(buf):
        return pallet_enum_t(struct.unpack(">i", buf.read(4))[0])
    _decode_one = staticmethod(_decode_one)

